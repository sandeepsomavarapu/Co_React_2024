HTML:

	TIM BERNERS LEE
	
	HTML 5
	
	
	
W3schools


table
	tr,th,td,thead,tbody..


Form tags


<form>
	Username :<input type="text"

</form>

IDE

CSS:
====
	CSS3-->STYLE
	
	 3 WAYS
		1.INLINE		-->OPEN TAG style="propname:propvalue;..."
		2.INTERNAL		--><head><style>......</style>
		3.EXTERNAL


		internal--->selector{proname1:value;propname2:value;....}
		
		element selector	h1	
		group selector		h1,h3,h3
		all selector		*
		id selector			#idname		unique
		class selector		.classname
		
		h1,p{proname1:value;propname2:value;....}
		
		EXTERNAL-->sandeepstyles.css
		
		
		Bootstrap-->.css-->twitter
		
		
		CDN LINK
		
JAVASCRIPT:
===========
		brenden eich 1995 
		
		Livescript--javascript
		
		ECMASCRIPT2015
		ES6

scripting language

interactive web pages
front end validations
can change html content/style


	1)inline		< ....>
	2)internal		<head><body><script>
	3)extrernal		myfunctions.js
	

variable:
name of a memory location

	let,const,var
	
	identifier
	
		a-z
		A-Z
		0-9
		$
		_
	
	var ename1="sandeep"
	
	
	Datatypes
	
		eid			
		ename	dasdasd
		sal	
		add		
		contact	9999999
		.....
	
	primitive DT	 one value
		number
		String
		boolean
		
	Composite DT	multi value
		array
		object...

	
		null
		undefined
NOTE:Browser can understand only JAVASCRIPT

	typescript
	react	-->jsx compiler/transpiler
	angular....TS



functions

		function add(a,b)
		{
		alert(a+b)
		}
	add(2,3)


ES6 features

arrays
object
validations

html-->static web pages
css-->style
js-->dynamic/interactive web pages 

REACT=html+css+js
		
	library		react			react.js
	
	framework	angular
	
	
	DOM
	Virtual DOM
	
		jorden walke
		 2013
		 
		 <script>
		 
		 
		 </script>
		 
		 18.2
		 simplicity-->JSX
		 virtual DOM	-->DOM
		 
		 visual studio code
			
			node js(npm)
			
REACT		 
			node js
			npm-->node package manager 
			
			cmd-->npm install -g packagename
			npm install -g create-react-app
			
			
			
			
			
C:\Users\SomavarapuSandeep>node -v
v22.11.0

C:\Users\SomavarapuSandeep>npm -v
10.9.0

C:\Users\SomavarapuSandeep>npm install -g create-react-app

	npm view react version 18.x
	
	
	MVC-->VIEW
	
	VDOM
	JSX
	Performance
	

to create project:
CLI
create-react-app projectname

	create-react-app demoapp
	
	cd demoapp
	
	npm start		3000	
	
Components:
===========
		2 types components
		
		1)functional components  /stateless components (props)-->immutable
		2)class components		/statefull components...state-->muttable
	
	class Test extends React.Component{
	
	
	}
	
	index.html--><div id="root">
	index.js
	App.js
	
	Arrow functions
	
	
	function demo(){
	
	
	
	}
	
	demo=()=>{}
	
	
	Class Components			class Test extends Component--react
	Functional Components		function
	
		state   	props-->container
		muttable	imuttable
		
		events-->camelcase
		{}
		class -->functions-->bind
		
		form
		
			Controlled 	form   event  react    onchange--->setState
			Uncontrolled form  ref		DOM  ref
		
		
		
		Asynchronous
		Synchronous
		
		
		callbackfunction
		
		
		function m1()
		{
		
		m2()
		}
		
		function m2()
		{
		
		
		}
		m1()
		
	m2=()=>{}
	
	arrays.map(callbackfunction)
	
	
	conditional rendering
	
			if else
			
			
			Product CRUD
			
			display products info
			 Delete 
			
			Employee CRUD
			
			
			
			HOOKS
			
			router
			
			bootstrap
			
			
			
			
			==
			
			let x="10"
			let y=10
			
			console.log(x==y) true
			
			
			===
			
			let x="10"
			let y=10
			
			console.log(x===y) false
			

Component Life Cycle Methods:
============================			
			constructor
			
			class component
			
			phases ---4
			
			intialization constructor()
			mounting		willmount,didmount
			updating		
			unmounting
			
			
			
			class		statefull
			functional	stateless/statefull
			
			16.7-->state 
			hook
			state
			
			hooks
			
			
			
		[count,seCount]	=useState(0)
		
		
		npm install bootstrap --save
		npm install --save reactstrap react react-dom
		
		CDN-->index.html
			
			
			Case Study:
				1.Bank App(Boys)
					1.Login
					2.Logout
					3.Account Info
					4.transfer
					5.Register



				2.Shopping App(Girls)
				
					1.Login
					2.Logout
					3.Products info
					4.Add ,Update ,Delete Products
					5.Cart/Order
					
	useEffect:
	===========
		API calls
	
	
AXIOS	:

			JSON-SERVER
			
			npm install  json-server
			
			
			
			



		
			
			
			
	
	
	
	
	
	
	
	
	
	
	
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		